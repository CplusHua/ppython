#labels 增删改查WEB示例程序
= 一个增删改查的简单WEB示例程序 =

这里展示了一个PHP+Python+Oracle的简单的示例程序。


== 数据库 ==

在Oracle中创建一张用户表，程序围绕着这张表进行增删改查操作：
{{{
create table users(
  id varchar(40)       not null, --用户ID
  userName varchar(20) not null, --用户姓名
  age int              not null, --年龄
  sex char(1)          not null, --1:男 0:女
  tel varchar(21),               --电话
  constraint PK_USERS primary key (ID)
);
}}}

== Python + Oracle 的环境配置 ==

Python+Oracle的环境配置请参考这篇文章：http://programmerdigest.cn/2012/03/1190.html 

_ 注意：Demo程序要求Python3，请按Python3+Oracle环境要求配置。_

== PHP 的环境配置 ==

互联网上有非常多的关于Apache+PHP的配置文章，因此这里不再重复提供。

对于PHP的配置一般来说只有一个要求：需要支持socket。可以通过phpinfo()输出来检查是否符合要求，“Sockets Support”显示“enabled”即可。

== Python 程序 ==

业务程序 demo1.py
{{{
# -*- coding: utf-8 -*-

import uuid
import php_python

def addUser(userName, age, sex, tel):
    """增加用户，返回主键uuid"""
    myuuid = str(uuid.uuid1())  #生成主键uuid
    try:
        conn = php_python.getConn()
        cursor = conn.cursor()
        cursor.execute("insert into users(id,userName,age,sex,tel)values(:id,:userName,:age,:sex,:tel)",
        {
            'id': myuuid,
            'userName': userName,
            'age': age,
            'sex': sex,
            'tel': tel,
        })
        conn.commit()
        print ("增加用户成功")
    except Exception as e:
        print ('增加用户异常', e)
    finally:
        php_python.closeConn(conn)
    
    return myuuid
    
def delUser(id_):
    """删除用户-业务函数"""
    try:
        conn = php_python.getConn()
        cursor = conn.cursor()
        cursor.execute("delete from users where id=:1", (id_,))
        conn.commit()
        print ("删除用户成功,ID:%s" % id_)
    except Exception as e:
        print ('删除用户异常', e)
    finally:
        php_python.closeConn(conn)

def changeUser(id_, userName, age, sex, tel):
    """修改用户资料"""
    try:
        conn = php_python.getConn()
        cursor = conn.cursor()
        cursor.execute("update users set userName=:userName,age=:age,sex=:sex,tel=:tel where id=:id",
        {
            'id': id_,
            'userName': userName,
            'age': age,
            'sex': sex,
            'tel': tel,
        })
        conn.commit()    
        print ("修改用户成功,ID:%s" % id_)
    except Exception as e:
        print ('修改用户异常', e)
    finally:
        php_python.closeConn(conn)

def userList():
    """用户列表"""
    retList = [] #返回列表
    try:
        conn = php_python.getConn()
        cursor = conn.cursor()
        cursor.execute("select id,userName,age,sex,tel from users")
        res = cursor.fetchall()
        for row in res:
            line = {}
            line['id'] = row[0]
            line['userName'] = row[1]
            line['age'] = row[2]
            line['sex'] = "男" if row[3] == '1' else "女"
            line['tel'] = row[4]
            retList.append(line)
        print ("用户列表成功")
        return retList
    except Exception as e:
        print ('用户列表异常', e)
        return []
    finally:
        php_python.closeConn(conn)
}}}

ppython框架文件 php_python.py：
{{{
#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import time
import socket
import os

import process

# -------------------------------------------------
# 基本配置
#
# -------------------------------------------------
LISTEN_PORT = 21230     #服务侦听端口
CHARSET = "utf-8"       #设置字符集（和PHP交互的字符集）


# -------------------------------------------------
# Oracle数据库连接配置
#
# -------------------------------------------------
import cx_Oracle
#数据库字符集
os.environ['NLS_LANG'] = 'SIMPLIFIED CHINESE_CHINA.UTF8' 
#数据库连接池
pool = cx_Oracle.SessionPool(
    user='oracle_username',
    password='oracle_passwd',
    dsn='127.0.0.1/xe',
    min=5,
    max=10,
    increment=1,
    connectiontype=cx_Oracle.Connection,
    threaded=True,
    getmode=cx_Oracle.SPOOL_ATTRVAL_NOWAIT,
    homogeneous=True)

def getConn():
    """获得数据库连接的公共函数"""
    return pool.acquire()

def closeConn(conn):
    """释放数据库连接的公共函数"""
    pool.release(conn)

# -------------------------------------------------
# 主程序
#    请不要随意修改下面的代码
# -------------------------------------------------
if __name__ == '__main__':

    print ("-------------------------------------------")
    print ("- PPython Service")
    print ("- Time: %s" % time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time())) )
    print ("-------------------------------------------")

    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  #TCP/IP
    sock.bind(('', LISTEN_PORT))  
    sock.listen(5)  

    print ("Listen port: %d" % LISTEN_PORT)
    print ("charset: %s" % CHARSET)
    print ("Server startup...")

    while 1:  
        connection,address = sock.accept()  #收到一个请求

        #print ("client's IP:%s, PORT:%d" % address)

        # 处理线程
        try:
            process.ProcessThread(connection).start()
        except:
            pass
}}}

ppython框架文件 process.py：
请在这里下载 

== PHP 程序 ==

增加用户(增) demo_list.php
{{{
<?php header("Content-Type: text/html; charset=utf-8");
require_once('php_python.php');

$id = ppython("demo1::addUser","张三",30,"1","13912345679");
echo "增减的用户ID：".$id;
?>
}}}

删除用户(删) demo_del.php
{{{
<?php header("Content-Type: text/html; charset=utf-8");
require_once('php_python.php');

ppython("demo1::delUser","7171f41e-b148-11e1-b4ca-60d819d051d0"); #根据用户ID删除用户
echo "del OK";
?>
}}}

修改用户(改) demo_change.php
{{{
<?php header("Content-Type: text/html; charset=utf-8");
require_once('php_python.php');

$id = ppython("demo1::changeUser","7171f41e-b148-11e1-b4ca-60d819d051d0","李四",35,"1","13912345677");

echo "change OK";
?>
}}}

用户列表(查) demo_list.php
{{{
<?php header("Content-Type: text/html; charset=utf-8");
require_once('php_python.php');

$list = ppython("demo1::userList");
?>

<html>
<body>
  <table border="1">
  <caption>用户列表</caption>
  <?php foreach($list as $row){?>
    <tr>
        <td><?php echo $row['id']?></td>
        <td><?php echo $row['userName']?></td>
        <td><?php echo $row['age']?></td>
        <td><?php echo $row['sex']?></td>
        <td><?php echo $row['tel']?></td>
    </tr>
  <?php } ?>
  </table>
</body>
</html>
}}}